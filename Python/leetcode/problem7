"""
Problem 7 : Reverse Integer
Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.

"""

"""
Approach:
1. Use modulo operation and multiply by 10 to the output to get result
2. Check if outout is with range else return 0
3. handle case of negative number appropriately
Time Complexity: O(lg(n))
Space Complexity: O(1)
""

class Solution:
    def reverse(self, x: int) -> int:
        negative = False
        if x < 0:
            negative = True
            x = -x
            
        output = 0
        while(x!=0):
            output = output*10 + x%10
            x = x//10
        
        if negative:
            output = -output
        
        if output>=2**31 or output<-2**31:
            return 0
        
        return output
    
